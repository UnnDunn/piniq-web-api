# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
      target: final
      args:
        - FEED_ACCESSTOKEN=${UNNDUNN_FEED_ACCESSTOKEN}
    ports:
      - 8000:80
      - 8001:443
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/home/appuser/.aspnet/https/Pinball.Api.pfx
    volumes:
      - ${DOTNET_USERSECRETS_PATH}:/home/appuser/.microsoft/usersecrets:ro
      - ${CERTIFICATE_PATH}:/home/appuser/.aspnet/https:ro
    image: piniq-server
    container_name: piniq-server
    depends_on: [ database ]
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=true
      - MSSQL_SA_PASSWORD=localDevPassw0rd!
    ports:
      - 1433:1433
    volumes:
      - sqldb-data:/var/opt/mssql
    container_name: piniq-database
volumes: 
  sqldb-data:
    
