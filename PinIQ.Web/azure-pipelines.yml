pool: default

trigger:
  - master

variables:
  buildConfiguration: "Release"

stages:
  - stage: "Build"
    displayName: "Build PinIqWeb"
    jobs:
      - job: "Build"
        displayName: "Build job"
        pool: default

        variables:
          buildConfiguration: "Release"
          dotnetSdkVersion: "9.x"

        steps:
          - task: UseDotNet@2
            displayName: "Install .Net Core SDK $(dotnetSdkVersion)"
            inputs:
              version: "$(dotnetSdkVersion)"
              performMultiLevelLookup: true

          - task: DotNetCoreCLI@2
            displayName: "Install Entity Framework tool"
            inputs:
              command: "custom"
              custom: "tool"
              arguments: "install -g dotnet-ef"

          - task: DotNetCoreCLI@2
            displayName: "Restore NuGet packages"
            inputs:
              command: "restore"
              projects: "**/*.csproj"
              feedsToUse: "select"
              vstsFeed: "UnnDunn-Nuget"

          - task: DotNetCoreCLI@2
            displayName: "Build"
            inputs:
              command: "build"
              projects: "**/*.csproj"
              arguments: "--no-restore --configuration $(buildConfiguration)"

          - task: DotNetCoreCLI@2
            inputs:
              command: "custom"
              custom: "ef"
              arguments: "migrations script -p ./PinIQ.Web/Pinball.Api.Data/Pinball.Api.Data.csproj -s ./PinIQ.Web/Pinball.Api/Pinball.Api.csproj -i -o $(Build.ArtifactStagingDirectory)/migrationScript.sql"
            displayName: "Create SQL Migration File"

          - task: DotNetCoreClI@2
            displayName: "Publish web project"
            inputs:
              command: "publish"
              publishWebProjects: True
              arguments: "--no-restore --no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)"
              zipAfterPublish: True

          - publish: "$(Build.ArtifactStagingDirectory)"
            artifact: "PinIqWeb"

  - stage: "Staging"
    displayName: "Deploy to Staging environment"
    dependsOn: Build
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - deployment: Deploy
        pool:
          vmImage: windows-latest
        environment: Staging
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: "PinIqWeb"

                - task: PowerShell@2
                  inputs:
                    targetType: "inline"
                    script: "Install-Module -Name SqlServer -Scope AllUsers"
                  displayName: "Install SqlCmd"

                - task: AzureWebApp@1
                  displayName: "Azure App Service Deploy"
                  inputs:
                    azureSubscription: "BizSpark"
                    appType: "webApp"
                    appName: "PinIqWeb"
                    deployToSlotOrASE: true
                    resourceGroupName: "PinIQ.Dev"
                    slotName: "staging"
                    package: "$(Pipeline.Workspace)/PinIqWeb/*.zip"
                    deploymentMethod: "auto"

                - task: SqlAzureDacpacDeployment@1
                  displayName: "Apply Migration Script"
                  inputs:
                    azureSubscription: 'BizSpark'
                    AuthenticationType: 'servicePrincipal'
                    ServerName: 'piniqwebdbserver.database.windows.net'
                    DatabaseName: 'PinIqWeb_Staging'
                    deployType: 'SqlTask'
                    SqlFile: '$(Pipeline.Workspace)/PinIqWeb/migrationScript.sql'
                    IpDetectionMethod: 'AutoDetect'
